name: Generate Documentation PDF

on:
  push:
    branches: [ master ]
    paths:
      - 'docs/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'docs/**'
  workflow_dispatch:

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
      
      - name: Install mdBook plugins
        run: |
          # Temporarily move rust-toolchain.toml to avoid nightly override
          if [ -f "rust-toolchain.toml" ]; then
            mv rust-toolchain.toml rust-toolchain.toml.bak
          fi
          
          rustup default stable
          cargo install mdbook-mermaid
          cargo install mdbook-toc
          cargo install mdbook-admonish
          cargo install mdbook-linkcheck
          
          # Restore rust-toolchain.toml
          if [ -f "rust-toolchain.toml.bak" ]; then
            mv rust-toolchain.toml.bak rust-toolchain.toml
          fi
      
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
      
      - name: Install mdbook-pdf
        run: |
          # Temporarily move rust-toolchain.toml to avoid nightly override
          if [ -f "rust-toolchain.toml" ]; then
            mv rust-toolchain.toml rust-toolchain.toml.bak
          fi
          
          rustup default stable
          cargo install mdbook-pdf
          
          # Restore rust-toolchain.toml
          if [ -f "rust-toolchain.toml.bak" ]; then
            mv rust-toolchain.toml.bak rust-toolchain.toml
          fi
      
      - name: Build documentation
        run: |
          cd docs
          mdbook build
      
      - name: Generate PDF
        run: |
          cd docs
          mdbook-pdf
      
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: neorust-documentation
          path: docs/book/pdf/output.pdf
      
      - name: Create release directory
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          mkdir -p docs/releases
          cp docs/book/pdf/output.pdf docs/releases/neorust-sdk-documentation.pdf
      
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book/html
          destination_dir: .
          
      - name: Upload PDF to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/releases
          destination_dir: docs/pdf
          keep_files: true
