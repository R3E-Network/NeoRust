name: Deploy Documentation

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Setup Chrome (required for PDF generation)
        uses: browser-actions/setup-chrome@v1
      
      - name: Install mdBook plugins
        run: |
          # Temporarily move rust-toolchain.toml to avoid nightly override
          if [ -f "rust-toolchain.toml" ]; then
            mv rust-toolchain.toml rust-toolchain.toml.bak
          fi
          
          rustup default stable
          cargo install mdbook-mermaid
          cargo install mdbook-toc
          cargo install mdbook-admonish
          cargo install mdbook-linkcheck
          cargo install mdbook-pdf
          
          # Restore rust-toolchain.toml
          if [ -f "rust-toolchain.toml.bak" ]; then
            mv rust-toolchain.toml.bak rust-toolchain.toml
          fi
      
      - name: Debug mdbook environment
        run: |
          cd docs
          ls -la
          mdbook --version
          echo "Chrome version:"
          google-chrome --version
          echo "mdbook-pdf version:"
          mdbook-pdf --version || echo "mdbook-pdf version check failed"
      
      - name: Build HTML documentation
        run: |
          cd docs
          RUST_BACKTRACE=1 mdbook build
      
      - name: Generate PDF
        run: |
          cd docs
          RUST_BACKTRACE=1 mdbook-pdf
          mkdir -p book/html/pdf
          cp book/pdf/output.pdf book/html/pdf/neorust-sdk-documentation.pdf
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/book/html'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 